@model Mehrsam_Darou.ViewModel.ChatViewModel

<div class="row g-1">
    <div class="col-xxl-3">
        <div id="sidebar-chat">
            @await Html.PartialAsync("_OnlineUsersPartial", Model)
        </div>
    </div>
    <div class="col-xxl-9">
        <div class="card position-relative overflow-hidden">
            <!-- Chat header can be in the partial or here, as you prefer -->
            <div id="current-chat-area">
                @await Html.PartialAsync("_CurrentChatPartial", Model)
            </div>
            <!-- The input area is STATIC and never refreshed -->
            <div class="bg-light bg-opacity-50 p-2" id="messageInputArea" @(Model.CurrentChat == null ? "style='display:none;'" : "")>
                <form id="chatForm" asp-action="SendMessage" method="post">
                    @if (Model.CurrentChat != null)
                    {
                        <input type="hidden" name="ReceiverId" value="@Model.CurrentChat.ContactId" />
                    }

                    <div class="row align-items-center">
                        <div class="col mb-2 mb-sm-0 d-flex">
                            <div class="input-group">
                                <input type="text" class="form-control border-0" id="messageInput" name="Content" placeholder="پیام خود را وارد کنید" autocomplete="off" />
                            </div>
                        </div>
                        <div class="col-sm-auto">
                            <div class="btn-group btn-toolbar">
                                <button type="submit" class="btn btn-sm btn-primary chat-send">ارسال</button>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function refreshSidebar() {
        fetch('@Url.Action("OnlineUsersPartial", "Chat", new { contactId = Model.CurrentChat?.ContactId })')
            .then(r => r.text())
            .then(html => document.getElementById('sidebar-chat').innerHTML = html);
    }

    function refreshCurrentChat() {
        const area = document.getElementById('current-chat-area');
        const messagesList = area.querySelector('#chatMessages');
        let atBottom = false;
        if(messagesList){
            atBottom = messagesList.scrollTop + messagesList.clientHeight >= messagesList.scrollHeight - 1;
        }
        fetch('@Url.Action("CurrentChatPartial", "Chat", new { contactId = Model.CurrentChat?.ContactId })')
            .then(r => r.text())
            .then(html => {
                area.innerHTML = html;
                // After rendering, scroll to bottom if we were at bottom before
                const newMessagesList = area.querySelector('#chatMessages');
                if(newMessagesList && atBottom){
                    newMessagesList.scrollTop = newMessagesList.scrollHeight;
                }
            });
    }

    setInterval(refreshSidebar, 20000);
    setInterval(refreshCurrentChat, 3000);

    // Optional: auto-scroll to bottom once on load (for new chat)
    window.onload = function () {
        setTimeout(function () {
            var chatList = document.getElementById('chatMessages');
            if (chatList) chatList.scrollTop = chatList.scrollHeight;
        }, 500);
    }
</script>