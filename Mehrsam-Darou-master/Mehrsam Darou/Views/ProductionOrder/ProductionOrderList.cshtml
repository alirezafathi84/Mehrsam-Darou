@using static Mehrsam_Darou.Helper.Helper
@model PaginatedList<Mehrsam_Darou.Models.ProductionOrder>
@using System.Globalization

@{
    PersianCalendar pc = new PersianCalendar();
    ViewData["Title"] = "لیست سفارشات تولید";
}

<h2 class="mb-4">لیست سفارشات تولید</h2>

<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <!-- پیام‌های موفقیت/خطا -->
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success px-2" role="alert">
                        <p class="mb-0">با موفقیت انجام شد</p>
                        <p class="mb-0">@TempData["SuccessMessage"]</p>
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger px-2" role="alert">
                        <p class="mb-0">خطا</p>
                        <p class="mb-0">@TempData["ErrorMessage"]</p>
                    </div>
                }

                <div class="d-flex flex-wrap justify-content-between gap-3">
                    <form method="get" asp-action="ProductionOrderList">
                        <div class="search-bar">
                            <span><i class="bx bx-search-alt"></i></span>
                            <input type="search" name="searchKey" value="@Context.Request.Query["searchKey"]" class="form-control" placeholder="جستجو...">
                        </div>
                    </form>
                    <div>
                        <a href="@Url.Action("AddProductionOrder")" class="btn btn-primary">
                            <i class="bx bx-plus me-1"></i> سفارش تولید جدید
                        </a>
                    </div>
                </div>
            </div>

            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table align-middle mb-0 table-hover table-centered">
                        <thead class="bg-light-subtle">
                            <tr>
                                <th>شماره سفارش</th>
                                <th>نام دارو</th>
                                <th>تاریخ هدف</th>
                                <th>مقدار</th>
                                <th>وضعیت</th>
                                <th>اولویت</th>
                                <th>اقدامات</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                foreach (var order in Model)
                                {
                                    <tr>
                                        <td>@order.OrderNumber</td>
                                        <td>@order.Medicine?.BrandName</td>
                                        <td>
                                            @{
                                                var date = order.TargetDate;
                                                // For DateOnly, we need to convert it to DateTime first for PersianCalendar
                                                var dateTime = date.ToDateTime(TimeOnly.MinValue);
                                                var persianDate = $"{pc.GetYear(dateTime)}/{pc.GetMonth(dateTime):00}/{pc.GetDayOfMonth(dateTime):00}";
                                            }
                                            @persianDate
                                        </td>
                                        <td>
                                            @order.Quantity.ToString("0.###") @order.Unit?.UnitName
                                        </td>
                                        <td>
                                            @switch (order.Status)
                                            {
                                                case "Planned":
                                                    <span class="badge bg-primary">برنامه‌ریزی شده</span>
                                                    break;
                                                case "In Progress":
                                                    <span class="badge bg-info">در حال انجام</span>
                                                    break;
                                                case "Completed":
                                                    <span class="badge bg-success">تکمیل شده</span>
                                                    break;
                                                case "Cancelled":
                                                    <span class="badge bg-secondary">لغو شده</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-warning">@order.Status</span>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            @switch (order.Priority)
                                            {
                                                case 1:
                                                    <span class="badge bg-danger">فوری</span>
                                                    break;
                                                case 2:
                                                    <span class="badge bg-warning">بالا</span>
                                                    break;
                                                case 3:
                                                    <span class="badge bg-primary">متوسط</span>
                                                    break;
                                                case 4:
                                                    <span class="badge bg-secondary">پایین</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-light text-dark">@order.Priority</span>
                                                    break;
                                            }
                                        </td>
                    @*                     <td>
                                            <div class="d-flex gap-2 justify-content-center">
                                                <a href="@Url.Action("EditProductionOrder", new { id = order.OrderId })" class="btn btn-soft-primary btn-sm" title="ویرایش">
                                                    <iconify-icon icon="solar:pen-2-broken" class="align-middle fs-18"></iconify-icon>
                                                </a>
                                                <button type="button" class="btn btn-soft-danger btn-sm"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#deleteModal"
                                                        data-bs-id="@order.OrderId"
                                                        data-bs-name="@order.OrderNumber"
                                                        title="حذف">
                                                    <iconify-icon icon="solar:trash-bin-minimalistic-2-broken" class="align-middle fs-18"></iconify-icon>
                                                </button>
                                            </div>
                                        </td> *@

                                        <td>
                                            <div class="d-flex gap-2 justify-content-center">
                                                <a href="@Url.Action("EditProductionOrder", new { id = order.OrderId })" class="btn btn-soft-primary btn-sm" title="ویرایش">
                                                    <iconify-icon icon="solar:pen-2-broken" class="align-middle fs-18"></iconify-icon>
                                                </a>
                                                <a href="@Url.Action("ProductionOrderStepList", "ProductionOrderStep", new { orderId = order.OrderId })" class="btn btn-soft-info btn-sm" title="مراحل تولید">
                                                    <iconify-icon icon="solar:list-broken" class="align-middle fs-18"></iconify-icon>
                                                </a>
                                                <button type="button" class="btn btn-soft-danger btn-sm"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#deleteModal"
                                                        data-bs-id="@order.OrderId"
                                                        data-bs-name="@order.OrderNumber"
                                                        title="حذف">
                                                    <iconify-icon icon="solar:trash-bin-minimalistic-2-broken" class="align-middle fs-18"></iconify-icon>
                                                </button>
                                            </div>
                                        </td>




                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="7" class="text-center py-4">
                                        <i class="bx bx-clipboard text-muted fs-1"></i>
                                        <p class="mt-2">هیچ سفارش تولیدی یافت نشد.</p>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="card-footer border-top">
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-end mb-0">
                        @if (Model.HasPreviousPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("ProductionOrderList", new { page = Model.PageIndex - 1, searchKey = Context.Request.Query["searchKey"] })">
                                    <i class="bx bx-chevron-right"></i>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">
                                    <i class="bx bx-chevron-right"></i>
                                </a>
                            </li>
                        }

                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                                <a class="page-link" href="@Url.Action("ProductionOrderList", new { page = i, searchKey = Context.Request.Query["searchKey"] })">@i</a>
                            </li>
                        }

                        @if (Model.HasNextPage)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("ProductionOrderList", new { page = Model.PageIndex + 1, searchKey = Context.Request.Query["searchKey"] })">
                                    <i class="bx bx-chevron-left"></i>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">
                                    <i class="bx bx-chevron-left"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- مودال تأیید حذف -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">حذف سفارش تولید</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="بستن"></button>
            </div>
            <div class="modal-body">
                <p>آیا از حذف این سفارش تولید مطمئن هستید؟</p>
                <p id="orderNameToDelete" class="fw-bold"></p>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post" asp-action="Delete">
                    <input type="hidden" id="orderIdToDelete" name="id" />
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">حذف</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">انصراف</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var deleteModal = document.getElementById('deleteModal');
            deleteModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var orderId = button.getAttribute('data-bs-id');
                var orderName = button.getAttribute('data-bs-name');

                document.getElementById('orderNameToDelete').textContent = orderName;
                document.getElementById('orderIdToDelete').value = orderId;
            });

            // بستن خودکار پیام‌های هشدار پس از 5 ثانیه
            setTimeout(function () {
                var alerts = document.querySelectorAll('.alert');
                alerts.forEach(function (alert) {
                    var bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);
        });
    </script>
}