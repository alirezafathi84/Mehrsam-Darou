@model List<Mehrsam_Darou.Models.ProductionOrderStep>
@using System.Globalization

@{
    PersianCalendar pc = new PersianCalendar();
    ViewData["Title"] = "مراحل سفارش تولید";
    var orderInfo = ViewBag.OrderInfo as ProductionOrder;
}

<h2 class="mb-4">مراحل سفارش تولید: @orderInfo.OrderNumber</h2>
<h4 class="mb-3">دارو: @orderInfo.Medicine?.BrandName</h4>

<div class="row">
    <div class="col-xl-12">
        <div class="card">
            <div class="card-body">
                <!-- پیام‌های موفقیت/خطا -->
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="alert alert-success px-2" role="alert">
                        <p class="mb-0">با موفقیت انجام شد</p>
                        <p class="mb-0">@TempData["SuccessMessage"]</p>
                    </div>
                }

                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger px-2" role="alert">
                        <p class="mb-0">خطا</p>
                        <p class="mb-0">@TempData["ErrorMessage"]</p>
                    </div>
                }

                <div class="d-flex justify-content-between align-items-center mb-4">
                    <a href="@Url.Action("ProductionOrderList", "ProductionOrder")" class="btn btn-secondary">
                        <i class="bx bx-arrow-back me-1"></i> بازگشت به سفارشات
                    </a>
                    <a href="@Url.Action("AddProductionOrderStep", new { orderId = orderInfo.OrderId })" class="btn btn-primary">
                        <i class="bx bx-plus me-1"></i> افزودن مرحله جدید
                    </a>
                </div>

                <div class="table-responsive">
                    <table class="table align-middle mb-0 table-hover table-centered">
                        <thead class="bg-light-subtle">
                            <tr>
                                <th>#</th>
                                <th>نام مرحله</th>
                                <th>تاریخ شروع برنامه‌ریزی شده</th>
                                <th>تاریخ شروع واقعی</th>
                                <th>تاریخ پایان</th>
                                <th>وضعیت</th>
                                <th>اقدامات</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Any())
                            {
                                foreach (var step in Model)
                                {
                                    <tr>
                                        <td>@step.Step?.Sequence</td>
                                        <td>@step.Step?.StepName</td>
                                        <td>
                                            @if (step.PlannedStart.HasValue)
                                            {
                                                var date = step.PlannedStart.Value;
                                                var persianDate = $"{pc.GetYear(date)}/{pc.GetMonth(date):00}/{pc.GetDayOfMonth(date):00}";
                                                @persianDate
                                            }
                                            else
                                            {
                                                @:-
                                            }
                                        </td>
                                        <td>
                                            @if (step.ActualStart.HasValue)
                                            {
                                                var date = step.ActualStart.Value;
                                                var persianDate = $"{pc.GetYear(date)}/{pc.GetMonth(date):00}/{pc.GetDayOfMonth(date):00}";
                                                @persianDate
                                            }
                                            else
                                            {
                                                @:-
                                            }
                                        </td>
                                        <td>
                                            @if (step.ActualEnd.HasValue)
                                            {
                                                var date = step.ActualEnd.Value;
                                                var persianDate = $"{pc.GetYear(date)}/{pc.GetMonth(date):00}/{pc.GetDayOfMonth(date):00}";
                                                @persianDate
                                            }
                                            else
                                            {
                                                @:-
                                            }
                                        </td>
                                        <td>
                                            @switch (step.Status)
                                            {
                                                case "Pending":
                                                    <span class="badge bg-secondary">در انتظار</span>
                                                    break;
                                                case "In Progress":
                                                    <span class="badge bg-info">در حال انجام</span>
                                                    break;
                                                case "Completed":
                                                    <span class="badge bg-success">تکمیل شده</span>
                                                    break;
                                                case "Failed":
                                                    <span class="badge bg-danger">ناموفق</span>
                                                    break;
                                                default:
                                                    <span class="badge bg-warning">@step.Status</span>
                                                    break;
                                            }
                                        </td>
                                        <td>
                                            <div class="d-flex gap-2 justify-content-center">
                                                <a href="@Url.Action("EditProductionOrderStep", new { id = step.OrderStepId })" class="btn btn-soft-primary btn-sm" title="ویرایش">
                                                    <iconify-icon icon="solar:pen-2-broken" class="align-middle fs-18"></iconify-icon>
                                                </a>
                                                <button type="button" class="btn btn-soft-danger btn-sm"
                                                        data-bs-toggle="modal"
                                                        data-bs-target="#deleteModal"
                                                        data-bs-id="@step.OrderStepId"
                                                        data-bs-name="@step.Step?.StepName"
                                                        title="حذف">
                                                    <iconify-icon icon="solar:trash-bin-minimalistic-2-broken" class="align-middle fs-18"></iconify-icon>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="7" class="text-center py-4">
                                        <i class="bx bx-list-check text-muted fs-1"></i>
                                        <p class="mt-2">هیچ مرحله‌ای برای این سفارش تعریف نشده است.</p>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- مودال تأیید حذف -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">حذف مرحله تولید</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="بستن"></button>
            </div>
            <div class="modal-body">
                <p>آیا از حذف این مرحله تولید مطمئن هستید؟</p>
                <p id="stepNameToDelete" class="fw-bold"></p>
            </div>
            <div class="modal-footer">
                <form id="deleteForm" method="post" asp-action="Delete">
                    <input type="hidden" id="stepIdToDelete" name="id" />
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">حذف</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">انصراف</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var deleteModal = document.getElementById('deleteModal');
            deleteModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;
                var stepId = button.getAttribute('data-bs-id');
                var stepName = button.getAttribute('data-bs-name');

                document.getElementById('stepNameToDelete').textContent = stepName;
                document.getElementById('stepIdToDelete').value = stepId;
            });

            // بستن خودکار پیام‌های هشدار پس از 5 ثانیه
            setTimeout(function () {
                var alerts = document.querySelectorAll('.alert');
                alerts.forEach(function (alert) {
                    var bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                });
            }, 5000);
        });
    </script>
}